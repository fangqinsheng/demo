{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","step","setState","slice","concat","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"uOAKA,SAASA,EAAOC,GACZ,OAAQ,4BAAQC,UAAU,SAASC,QAASF,EAAME,SAAUF,EAAMG,OAGtE,SAASC,EAAgBC,GAWrB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,K,IAuBLG,E,2KAEWL,GAAI,IAAD,OACZ,OAAO,kBAACR,EAAD,CAAQI,MAAOU,KAAKb,MAAMK,QAAQE,GAAIL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,+BAI/E,OACA,6BACI,yBAAKN,UAAU,aACdY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEnB,yBAAKb,UAAU,aACdY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAEnB,yBAAKb,UAAU,aACdY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GAtBXC,IAAMC,WA6BpBC,E,kDACF,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDkB,MAAQ,CACTC,QAAU,CAAC,CACPd,QAASe,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPE,E,mDAWZC,GACHX,KAAKY,SAAS,CACVH,WAAYE,EACZD,QAAUC,EAAK,IAAO,M,kCAIlBjB,GAER,IAAMY,EAAUN,KAAKK,MAAMC,QAAQO,MAAM,EAAGb,KAAKK,MAAMI,WAAa,GAE9DjB,EADUc,EAAQA,EAAQX,OAAS,GACjBH,QAAQqB,QAE7BtB,EAAgBC,IAAYA,EAAQE,KAGvCF,EAAQE,GAAKM,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACVN,QAASA,EAAQQ,OAAO,CAAC,CACrBtB,QAASA,KAEbiB,WAAYH,EAAQX,OACpBe,SAAUV,KAAKK,MAAMK,a,+BAInB,IAYFK,EAZC,OACCT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS1B,EAAgByB,EAAQxB,SAEjC0B,EAAQZ,EAAQa,KAAI,SAACR,EAAMS,GAC7B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OAAO,wBAAIE,IAAKF,GACZ,4BAAQ/B,QAAS,kBAAM,EAAKkC,OAAOH,KAAQC,OAWnD,OALEN,EADEE,EACO,WAAaA,EAEb,iBAAmBjB,KAAKK,MAAMK,QAAU,IAAM,KAIzD,yBAAKtB,UAAU,QACX,yBAAKA,UAAU,cACf,kBAACW,EAAD,CAAOP,QAASwB,EAAQxB,QAASH,QAAS,SAACK,GAAD,OAAO,EAAK8B,YAAY9B,OAElE,yBAAKN,UAAU,aACf,6BAAO2B,GACP,4BAAMG,S,GAhEChB,IAAMC,WA0END,IAAMC,UAWLD,IAAMC,UAgB1BsB,IAASC,OACL,kBAACtB,EAAD,MACAuB,SAASC,eAAe,W","file":"static/js/main.35605ed4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props) {\n    return (<button className=\"square\" onClick={props.onClick}>{props.value}</button>)\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n// class Square extends React.Component {\n//     // constructor(props) {\n//     //     super(props);\n//     //     this.state = {\n//     //         value: null,\n//     //     }\n//     // }\n\n//     render() {\n//       return (\n//         <button \n//             className=\"square\" \n//             onClick={() => this.props.onClick() }\n//         >\n//           {this.props.value}\n//         </button>\n//       );\n//     }\n// }\n  \nclass Board extends React.Component {\n\n    renderSquare(i) {\n        return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i) }/>;\n    }\n\n    render() {\n        return (\n        <div>\n            <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n            </div>\n            <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n            </div>\n        </div>\n        );\n    }\n}\n  \nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history:  [{\n                squares: Array(9).fill(null)\n            }],\n            stepNumber: 0,\n            xIsNext: true\n        }\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step%2) === 0\n        })\n    }\n\n    handleClick(i) {\n        // debugger;\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if(calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'x' : 'o';\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        })\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) =>  {\n            const desc = move ? 'go to move #' + move : 'go to game start';\n            return(<li key={move}>\n                <button onClick={() => this.jumpTo(move)}>{desc}</button>\n            </li>);\n        })\n\n        let status;\n        if (winner) {\n          status = 'Winner: ' + winner;\n        } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n        <div className=\"game\">\n            <div className=\"game-board\">\n            <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\n            </div>\n            <div className=\"game-info\">\n            <div>{ status }</div>\n            <ol>{ moves }</ol>\n            </div>\n        </div>\n        );\n    }\n}\n  \n// ========================================\n\n// jsx写法\nclass Demo extends React.Component {\n    render() {\n        return (\n            <div className=\"demo\">\n                {this.props.name}\n            </div> \n        )\n    }\n}\n\n// 元生js写法\nclass Demo1 extends React.Component {\n    render() {\n        return  React.createElement('div', {className: 'demo1'}, `hello, ${this.props.name}`)\n    }\n}\n\n// ReactDOM.render(\n//     <Demo name=\"asd\" />,\n//     document.getElementById('root')\n// )\n\n// ReactDOM.render(\n//     <Demo1 name=\"asd\" />,\n//     document.getElementById('root')\n// )\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);"],"sourceRoot":""}